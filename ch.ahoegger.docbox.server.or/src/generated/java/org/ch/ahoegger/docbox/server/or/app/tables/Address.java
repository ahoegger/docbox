/*
 * This file is generated by jOOQ.
*/
package org.ch.ahoegger.docbox.server.or.app.tables;


import ch.ahoegger.docbox.server.or.generator.converter.LongConverter;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ch.ahoegger.docbox.server.or.app.App;
import org.ch.ahoegger.docbox.server.or.app.Keys;
import org.ch.ahoegger.docbox.server.or.app.tables.records.AddressRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Address extends TableImpl<AddressRecord> {

    private static final long serialVersionUID = -1691468746;

    /**
     * The reference instance of <code>APP.ADDRESS</code>
     */
    public static final Address ADDRESS = new Address();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AddressRecord> getRecordType() {
        return AddressRecord.class;
    }

    /**
     * The column <code>APP.ADDRESS.ADDRESS_NR</code>.
     */
    public final TableField<AddressRecord, BigDecimal> ADDRESS_NR = createField("ADDRESS_NR", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "", new LongConverter());

    /**
     * The column <code>APP.ADDRESS.LINE_1</code>.
     */
    public final TableField<AddressRecord, String> LINE_1 = createField("LINE_1", org.jooq.impl.SQLDataType.VARCHAR.length(1200), this, "");

    /**
     * The column <code>APP.ADDRESS.LINE_2</code>.
     */
    public final TableField<AddressRecord, String> LINE_2 = createField("LINE_2", org.jooq.impl.SQLDataType.VARCHAR.length(1200), this, "");

    /**
     * The column <code>APP.ADDRESS.PLZ</code>.
     */
    public final TableField<AddressRecord, String> PLZ = createField("PLZ", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

    /**
     * The column <code>APP.ADDRESS.CITY</code>.
     */
    public final TableField<AddressRecord, String> CITY = createField("CITY", org.jooq.impl.SQLDataType.VARCHAR.length(240), this, "");

    /**
     * Create a <code>APP.ADDRESS</code> table reference
     */
    public Address() {
        this("ADDRESS", null);
    }

    /**
     * Create an aliased <code>APP.ADDRESS</code> table reference
     */
    public Address(String alias) {
        this(alias, ADDRESS);
    }

    private Address(String alias, Table<AddressRecord> aliased) {
        this(alias, aliased, null);
    }

    private Address(String alias, Table<AddressRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AddressRecord> getPrimaryKey() {
        return Keys.SQL181122110600130;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AddressRecord>> getKeys() {
        return Arrays.<UniqueKey<AddressRecord>>asList(Keys.SQL181122110600130);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Address as(String alias) {
        return new Address(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Address rename(String name) {
        return new Address(name, null);
    }
}
