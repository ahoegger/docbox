/*
 * This file is generated by jOOQ.
*/
package org.ch.ahoegger.docbox.server.or.app.tables;


import ch.ahoegger.docbox.server.or.generator.converter.LongConverter;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.ch.ahoegger.docbox.server.or.app.App;
import org.ch.ahoegger.docbox.server.or.app.Keys;
import org.ch.ahoegger.docbox.server.or.app.tables.records.EmployerUserRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerUser extends TableImpl<EmployerUserRecord> {

    private static final long serialVersionUID = -1132070017;

    /**
     * The reference instance of <code>APP.EMPLOYER_USER</code>
     */
    public static final EmployerUser EMPLOYER_USER = new EmployerUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployerUserRecord> getRecordType() {
        return EmployerUserRecord.class;
    }

    /**
     * The column <code>APP.EMPLOYER_USER.EMPLOYER_NR</code>.
     */
    public final TableField<EmployerUserRecord, BigDecimal> EMPLOYER_NR = createField("EMPLOYER_NR", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "", new LongConverter());

    /**
     * The column <code>APP.EMPLOYER_USER.USERNAME</code>.
     */
    public final TableField<EmployerUserRecord, String> USERNAME = createField("USERNAME", org.jooq.impl.SQLDataType.VARCHAR.length(240).nullable(false), this, "");

    /**
     * Create a <code>APP.EMPLOYER_USER</code> table reference
     */
    public EmployerUser() {
        this("EMPLOYER_USER", null);
    }

    /**
     * Create an aliased <code>APP.EMPLOYER_USER</code> table reference
     */
    public EmployerUser(String alias) {
        this(alias, EMPLOYER_USER);
    }

    private EmployerUser(String alias, Table<EmployerUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmployerUser(String alias, Table<EmployerUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployerUserRecord> getPrimaryKey() {
        return Keys.SQL190128171032262;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployerUserRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployerUserRecord>>asList(Keys.SQL190128171032262);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerUser as(String alias) {
        return new EmployerUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmployerUser rename(String name) {
        return new EmployerUser(name, null);
    }
}
