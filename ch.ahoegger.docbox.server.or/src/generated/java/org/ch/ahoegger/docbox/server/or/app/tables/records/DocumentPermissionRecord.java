/*
 * This file is generated by jOOQ.
*/
package org.ch.ahoegger.docbox.server.or.app.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.ch.ahoegger.docbox.server.or.app.tables.DocumentPermission;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentPermissionRecord extends UpdatableRecordImpl<DocumentPermissionRecord> implements Record3<String, BigDecimal, Integer> {

    private static final long serialVersionUID = -863517534;

    /**
     * Setter for <code>APP.DOCUMENT_PERMISSION.USERNAME</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>APP.DOCUMENT_PERMISSION.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>APP.DOCUMENT_PERMISSION.DOCUMENT_NR</code>.
     */
    public void setDocumentNr(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>APP.DOCUMENT_PERMISSION.DOCUMENT_NR</code>.
     */
    public BigDecimal getDocumentNr() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>APP.DOCUMENT_PERMISSION.PERMISSION</code>.
     */
    public void setPermission(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>APP.DOCUMENT_PERMISSION.PERMISSION</code>.
     */
    public Integer getPermission() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, BigDecimal> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, BigDecimal, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, BigDecimal, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DocumentPermission.DOCUMENT_PERMISSION.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return DocumentPermission.DOCUMENT_PERMISSION.DOCUMENT_NR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return DocumentPermission.DOCUMENT_PERMISSION.PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getDocumentNr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPermission();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentPermissionRecord value1(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentPermissionRecord value2(BigDecimal value) {
        setDocumentNr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentPermissionRecord value3(Integer value) {
        setPermission(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentPermissionRecord values(String value1, BigDecimal value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentPermissionRecord
     */
    public DocumentPermissionRecord() {
        super(DocumentPermission.DOCUMENT_PERMISSION);
    }

    /**
     * Create a detached, initialised DocumentPermissionRecord
     */
    public DocumentPermissionRecord(String username, BigDecimal documentNr, Integer permission) {
        super(DocumentPermission.DOCUMENT_PERMISSION);

        set(0, username);
        set(1, documentNr);
        set(2, permission);
    }
}
