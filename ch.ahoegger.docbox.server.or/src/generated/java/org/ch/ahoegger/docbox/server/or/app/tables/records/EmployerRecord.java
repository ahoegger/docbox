/*
 * This file is generated by jOOQ.
*/
package org.ch.ahoegger.docbox.server.or.app.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.ch.ahoegger.docbox.server.or.app.tables.Employer;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployerRecord extends UpdatableRecordImpl<EmployerRecord> implements Record5<BigDecimal, String, BigDecimal, String, String> {

    private static final long serialVersionUID = 207448497;

    /**
     * Setter for <code>APP.EMPLOYER.EMPLOYER_NR</code>.
     */
    public void setEmployerNr(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>APP.EMPLOYER.EMPLOYER_NR</code>.
     */
    public BigDecimal getEmployerNr() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>APP.EMPLOYER.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>APP.EMPLOYER.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>APP.EMPLOYER.ADDRESS_NR</code>.
     */
    public void setAddressNr(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>APP.EMPLOYER.ADDRESS_NR</code>.
     */
    public BigDecimal getAddressNr() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>APP.EMPLOYER.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>APP.EMPLOYER.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>APP.EMPLOYER.PHONE</code>.
     */
    public void setPhone(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>APP.EMPLOYER.PHONE</code>.
     */
    public String getPhone() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<BigDecimal> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<BigDecimal, String, BigDecimal, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<BigDecimal, String, BigDecimal, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field1() {
        return Employer.EMPLOYER.EMPLOYER_NR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Employer.EMPLOYER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Employer.EMPLOYER.ADDRESS_NR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Employer.EMPLOYER.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Employer.EMPLOYER.PHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value1() {
        return getEmployerNr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getAddressNr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerRecord value1(BigDecimal value) {
        setEmployerNr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerRecord value3(BigDecimal value) {
        setAddressNr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerRecord value4(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerRecord value5(String value) {
        setPhone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmployerRecord values(BigDecimal value1, String value2, BigDecimal value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployerRecord
     */
    public EmployerRecord() {
        super(Employer.EMPLOYER);
    }

    /**
     * Create a detached, initialised EmployerRecord
     */
    public EmployerRecord(BigDecimal employerNr, String name, BigDecimal addressNr, String email, String phone) {
        super(Employer.EMPLOYER);

        set(0, employerNr);
        set(1, name);
        set(2, addressNr);
        set(3, email);
        set(4, phone);
    }
}
